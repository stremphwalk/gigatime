{
  "tech_stack": [
    "TypeScript",
    "Node.js",
    "Express.js",
    "React",
    "Vite",
    "PostgreSQL",
    "Drizzle ORM",
    "Auth0",
    "Clerk",
    "Supabase",
    "Neon",
    "Tailwind CSS",
    "Radix UI",
    "TanStack Query",
    "Zod",
    "WebSocket",
    "Deepgram",
    "AWS Bedrock"
  ],
  "features": [
    {
      "name": "User Authentication & Management",
      "description": "Multi-provider authentication system supporting Auth0, Clerk, and session-based auth for development. User initialization and profile management.",
      "files": [
        "server/auth.ts",
        "server/auth0.ts", 
        "server/clerkAuth.ts",
        "api/auth/callback.ts",
        "api/auth/login.ts",
        "api/auth/logout.ts",
        "api/auth/user.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "User Authentication API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/init-user": {
            "post": {
              "summary": "Initialize user profile",
              "security": [{"bearerAuth": []}],
              "responses": {
                "200": {"description": "User initialized successfully"}
              }
            }
          }
        }
      }
    },
    {
      "name": "Medical Notes CRUD",
      "description": "Complete CRUD operations for medical notes with patient information, templates, and content management.",
      "files": [
        "server/routes.ts",
        "server/storage.ts",
        "shared/schema.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Medical Notes API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/notes": {
            "get": {
              "summary": "Get user's notes",
              "security": [{"bearerAuth": []}],
              "responses": {
                "200": {"description": "List of notes"}
              }
            },
            "post": {
              "summary": "Create new note",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "title": {"type": "string"},
                        "patientName": {"type": "string"},
                        "content": {"type": "object"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/notes/{id}": {
            "get": {
              "summary": "Get specific note",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            },
            "put": {
              "summary": "Update note",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            },
            "delete": {
              "summary": "Delete note",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            }
          }
        }
      }
    },
    {
      "name": "Note Templates Management",
      "description": "Template system for medical notes with customizable sections, import/export functionality, and sharing capabilities.",
      "files": [
        "server/routes.ts",
        "server/storage.ts",
        "shared/schema.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Note Templates API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/note-templates": {
            "get": {
              "summary": "Get note templates",
              "security": [{"bearerAuth": []}],
              "responses": {
                "200": {"description": "List of templates"}
              }
            },
            "post": {
              "summary": "Create note template",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "name": {"type": "string"},
                        "type": {"type": "string"},
                        "sections": {"type": "array"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/note-templates/{id}": {
            "put": {
              "summary": "Update template",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            },
            "delete": {
              "summary": "Delete template",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            }
          },
          "/api/note-templates/import": {
            "post": {
              "summary": "Import template by shareable ID",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "shareableId": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Smart Phrases System",
      "description": "Intelligent text expansion system with interactive elements, sharing, and import functionality for medical terminology.",
      "files": [
        "server/routes.ts",
        "server/storage.ts",
        "shared/schema.ts",
        "shared/smart-phrase-parser.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Smart Phrases API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/smart-phrases": {
            "get": {
              "summary": "Get smart phrases",
              "security": [{"bearerAuth": []}],
              "responses": {
                "200": {"description": "List of smart phrases"}
              }
            },
            "post": {
              "summary": "Create smart phrase",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "trigger": {"type": "string"},
                        "content": {"type": "string"},
                        "elements": {"type": "array"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/smart-phrases/{id}": {
            "put": {
              "summary": "Update smart phrase",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            },
            "delete": {
              "summary": "Delete smart phrase",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            }
          },
          "/api/smart-phrases/import/{shareableId}": {
            "post": {
              "summary": "Import smart phrase by shareable ID",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "shareableId", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            }
          }
        }
      }
    },
    {
      "name": "AI Medical Processing",
      "description": "AI-powered processing for medications, lab results, and past medical history using AWS Bedrock.",
      "files": [
        "server/ai/prompts.ts",
        "server/ai/nova.ts",
        "server/ai/canonical.ts",
        "server/routes.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "AI Medical Processing API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/ai/medications": {
            "post": {
              "summary": "Process medications with AI",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "text": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/ai/labs": {
            "post": {
              "summary": "Process lab results with AI",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "text": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/ai/pmh": {
            "post": {
              "summary": "Process past medical history with AI",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "text": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Run List Management",
      "description": "Clinical rounds management system with patient lists, note generation, and AI-powered workflow automation.",
      "files": [
        "server/routes.ts",
        "server/storage.ts",
        "shared/schema.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Run List Management API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/run-list/today": {
            "get": {
              "summary": "Get today's run list",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "day", "in": "query", "schema": {"type": "string"}},
                {"name": "carryForward", "in": "query", "schema": {"type": "boolean"}}
              ]
            }
          },
          "/api/run-list/{id}/patients": {
            "post": {
              "summary": "Add patient to run list",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "alias": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/run-list/{id}/patients/reorder": {
            "put": {
              "summary": "Reorder patients in run list",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "order": {"type": "array", "items": {"type": "string"}}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/run-list/patients/{id}": {
            "put": {
              "summary": "Update patient in run list",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            },
            "delete": {
              "summary": "Archive patient from run list",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            }
          },
          "/api/run-list/notes/{listPatientId}": {
            "put": {
              "summary": "Update run list note",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "listPatientId", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            }
          },
          "/api/run-list/ai/generate": {
            "post": {
              "summary": "Generate AI-powered run list notes",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "listPatientId": {"type": "string"},
                        "transcript": {"type": "string"},
                        "mode": {"type": "string", "enum": ["prepost", "full", "preround", "postround", "progress"]}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "name": "Team Collaboration",
      "description": "Multi-user team management with shared resources, todos, calendar events, and bulletin posts.",
      "files": [
        "server/routes.ts",
        "server/storage.ts",
        "shared/schema.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Team Collaboration API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/teams": {
            "get": {
              "summary": "Get user's teams",
              "security": [{"bearerAuth": []}]
            },
            "post": {
              "summary": "Create new team",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "name": {"type": "string"},
                        "description": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/teams/join": {
            "post": {
              "summary": "Join team by code",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "groupCode": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/teams/{teamId}/todos": {
            "get": {
              "summary": "Get team todos",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "teamId", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            },
            "post": {
              "summary": "Create team todo",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "teamId", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            }
          },
          "/api/teams/{teamId}/calendar": {
            "get": {
              "summary": "Get team calendar events",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "teamId", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            },
            "post": {
              "summary": "Create calendar event",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "teamId", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            }
          }
        }
      }
    },
    {
      "name": "Autocomplete System",
      "description": "Medical terminology autocomplete with categories, priority settings, and sharing capabilities.",
      "files": [
        "server/routes.ts",
        "server/storage.ts",
        "shared/schema.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Autocomplete API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/autocomplete-items": {
            "get": {
              "summary": "Get autocomplete items",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "category", "in": "query", "schema": {"type": "string"}},
                {"name": "search", "in": "query", "schema": {"type": "string"}}
              ]
            },
            "post": {
              "summary": "Create autocomplete item",
              "security": [{"bearerAuth": []}],
              "requestBody": {
                "required": true,
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "object",
                      "properties": {
                        "text": {"type": "string"},
                        "category": {"type": "string"},
                        "dosage": {"type": "string"},
                        "frequency": {"type": "string"}
                      }
                    }
                  }
                }
              }
            }
          },
          "/api/autocomplete-items/{id}": {
            "put": {
              "summary": "Update autocomplete item",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            },
            "delete": {
              "summary": "Delete autocomplete item",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            }
          }
        }
      }
    },
    {
      "name": "User Preferences & Settings",
      "description": "User preference management for UI layout, language settings, and personalization options.",
      "files": [
        "server/routes.ts",
        "server/storage.ts",
        "shared/schema.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "User Preferences API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/init": {
            "get": {
              "summary": "Initialize user preferences and settings",
              "security": [{"bearerAuth": []}]
            }
          }
        }
      }
    },
    {
      "name": "Lab Settings & Presets",
      "description": "Laboratory result management with customizable visibility, trending, and preset configurations.",
      "files": [
        "server/routes.ts",
        "server/storage.ts",
        "shared/schema.ts"
      ],
      "api_doc": {
        "openapi": "3.0.0",
        "info": {
          "title": "Lab Settings API",
          "version": "1.0.0"
        },
        "paths": {
          "/api/user-lab-settings": {
            "get": {
              "summary": "Get user lab settings",
              "security": [{"bearerAuth": []}]
            },
            "post": {
              "summary": "Update lab settings",
              "security": [{"bearerAuth": []}]
            },
            "delete": {
              "summary": "Reset lab settings",
              "security": [{"bearerAuth": []}]
            }
          },
          "/api/lab-presets": {
            "get": {
              "summary": "Get lab presets",
              "security": [{"bearerAuth": []}]
            },
            "post": {
              "summary": "Create lab preset",
              "security": [{"bearerAuth": []}]
            }
          },
          "/api/lab-presets/{id}": {
            "put": {
              "summary": "Update lab preset",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            },
            "delete": {
              "summary": "Delete lab preset",
              "security": [{"bearerAuth": []}],
              "parameters": [
                {"name": "id", "in": "path", "required": true, "schema": {"type": "string"}}
              ]
            }
          }
        }
      }
    }
  ]
}